// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Wallet {
  id      Int      @id @default(autoincrement())
  address String   @unique
  realms  Realm[]  @relation()
  sRealms SRealm[] @relation()
  // characters Character[]
  // lootItems  LootItem[]
}

model Realm {
  id      Int     @id @default(autoincrement())
  realmId Int     @unique
  name    String?
  wallet  Wallet? @relation(fields: [owner], references: [address])
  owner   String?
}

model SRealm {
  id      Int    @id @default(autoincrement())
  realmId Int    @unique
  wallet  Wallet @relation(fields: [owner], references: [address])
  owner   String
}

// model Character {
//   id        Int        @id @default(autoincrement())
//   name      String
//   sex       String
//   race      String
//   orderId   Int?
//   wallet    Wallet     @relation(fields: [id], references: [id])
//   lootItems LootItem[]
// }

// model LootItem {
//   id              Int        @id @default(autoincrement())
//   characterId     Int        @unique
//   name            String
//   equipmentId     Int? // 1 = head, 2 = body etc TODO
//   orderId         Int?
//   prefixId        Int?
//   suffixId        Int?
//   greatnessLevel  Int?
//   locationFoundId Int? // Do we set locations like 011111 = 01 = realms  | 1111 = realm id
//   wallet          Wallet?    @relation(fields: [id], references: [id])
//   character       Character? @relation(fields: [characterId], references: [id])
// }

model Desiege {
  id             Int  @id @default(autoincrement())
  gameId         Int  @unique
  winner         Int?
  attackedTokens Int?
  defendedTokens Int?
  blockIndexed   Int // arbitray number
}
