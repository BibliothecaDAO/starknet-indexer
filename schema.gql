# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""The Buildings Model"""
type Building {
  id: ID!
  realm: Realm
  realmId: Float!
  type: String
}

"""Building Cost Model"""
type BuildingCost {
  buildingType: String!
  qty: Float!
  resourceType: String!
}

input BuildingCostInput {
  buildingType: String!
  qty: Float!
  resourceType: String!
}

input BuildingInput {
  id: ID
  realmId: Float!
  type: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""The Desiege Model"""
type Desiege {
  attackedTokens: Float!
  defendedTokens: Float!
  eventIndexed: Float!
  gameId: Float!
  id: ID!
  initialHealth: Float!
  startedOn: DateTime!
  winner: Float!
}

"""StarkNet Event Model"""
type Event {
  chainId: String!
  contract: String!
  eventId: Float!
  id: ID!
  name: String!
  parameters: [Float!]!
  timestamp: DateTime!
  txHash: String!
}

type Mutation {
  createOrUpdateBuildingCost(data: BuildingCostInput!): BuildingCost!
  createOrUpdateBuildings(data: BuildingInput!): Building!
  createOrUpdateRealm(data: RealmInput!): Realm!
  createOrUpdateRealmTrait(data: RealmTraitInput!): RealmTrait!
  createOrUpdateResources(data: ResourceInput!): Resource!
  createOrUpdateWallet(data: WalletInput!): Wallet!
  reindexDesiege: Boolean!
}

type Query {
  getAllBuildings: [Building!]!
  getBuildingCosts: [BuildingCost!]!
  getBuildings(id: Float!): Building!
  getDesiege(id: Float!): Desiege!
  getDesiegeGames: [Desiege!]!
  getEvent(id: Float!): Event!
  getEvents: [Event!]!
  getRealm(realmId: Float!): Realm!
  getRealmTraits: [RealmTrait!]!
  getRealms: [Realm!]!
  getRealmsByAddress(address: String!): [Realm!]!
  getResource(id: Float!): Resource!
  getResources: [Resource!]!
  getResourcesByAddress(address: String!): [Resource!]!
  getWallet(address: String!): Wallet!
  getWallets: [Wallet!]!
}

"""The Realm Model"""
type Realm {
  buildings: [Building!]
  imageUrl: String
  name: String
  orderType: String!
  owner: String
  rarityRank: Int!
  rarityScore: Float!
  realmId: Int!
  resources: [Resource!]
  traits: [RealmTrait!]
  wallet: Wallet
}

input RealmInput {
  imageUrl: String
  name: String!
  orderType: String
  owner: String
  rarityRank: Int
  rarityScore: Float
  realmId: Int!
}

"""Realm Trait Model"""
type RealmTrait {
  id: ID!
  qty: Float!
  realm: Realm
  realmId: Float!
  type: String!
}

input RealmTraitInput {
  qty: Float!
  realmId: Float!
  type: String!
}

"""The Resource Model"""
type Resource {
  id: ID!
  lvl: Float!
  qty: Float!
  realm: Realm!
  realmId: Float
  type: String!
}

input ResourceInput {
  id: ID
  lvl: Float
  qty: Float
  realmId: Float!
  type: String!
}

"""The Wallet Model"""
type Wallet {
  address: String!
  id: ID!
  realms: [Realm!]!
}

input WalletInput {
  address: String!
  realms: RealmInput
}
